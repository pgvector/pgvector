name: build
on: [push, pull_request]
jobs:
  ubuntu:
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.ref_name, 'mac') && !startsWith(github.ref_name, 'windows') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - postgres: 18
            os: ubuntu-24.04
          - postgres: 17
            os: ubuntu-24.04
          - postgres: 16
            os: ubuntu-24.04-arm
          - postgres: 15
            os: ubuntu-22.04
          - postgres: 14
            os: ubuntu-22.04-arm
          - postgres: 13
            os: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ankane/setup-postgres@v1
        with:
          postgres-version: ${{ matrix.postgres }}
          dev-files: true
      - run: make
        env:
          PG_CFLAGS: -DUSE_ASSERT_CHECKING -Wall -Wextra -Werror -Wno-unused-parameter -Wno-sign-compare
      - run: |
          export PG_CONFIG=`which pg_config`
          sudo --preserve-env=PG_CONFIG make install
      - run: make installcheck
      - if: ${{ failure() }}
        run: cat regression.diffs
      - run: |
          sudo apt-get update
          sudo apt-get install libipc-run-perl
      - run: make prove_installcheck
  ubuntu_spr:
    runs-on: ubuntu-24.04
    if: ${{ !startsWith(github.ref_name, 'mac') && !startsWith(github.ref_name, 'windows') }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Intel SDE
        run: |
          curl -o /tmp/sde.tar.xz https://downloadmirror.intel.com/831748/sde-external-9.44.0-2024-08-22-lin.tar.xz
          mkdir /tmp/sde && tar -xvf /tmp/sde.tar.xz -C /tmp/sde/
          sudo mv /tmp/sde/* /opt/sde && sudo ln -s /opt/sde/sde64 /usr/bin/sde
      - name: Install Postgres
        run: |
          sudo apt-get install postgresql-16
          sudo apt-get install postgresql-server-dev-16
          sudo systemctl stop postgresql
          pgdir=$(pg_config --bindir)
          pgdata=/tmp/postgres_data
          mkdir $pgdata
          $pgdir/initdb -D $pgdata --username=$USER
          sudo chmod 777 /var/run/postgresql/
          sde -spr -mix -- $pgdir/pg_ctl -D $pgdata start
      - run: make
        env:
          PG_CFLAGS: -DUSE_ASSERT_CHECKING -Wall -Wextra -Werror -Wno-unused-parameter -Wno-sign-compare
      - run: |
          export PG_CONFIG=`which pg_config`
          sudo --preserve-env=PG_CONFIG make install
      - run: sde -spr -mix -- make installcheck
      - if: ${{ failure() }}
        run: cat regression.diffs
      - name: Report AVX512 FP16 FMA instruction count
        run: cat sde*.txt | grep -E "FMA.*PH"
  mac:
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.ref_name, 'windows') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - postgres: 17
            os: macos-15
          - postgres: 14
            os: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: ankane/setup-postgres@v1
        with:
          postgres-version: ${{ matrix.postgres }}
      - run: make
        env:
          PG_CFLAGS: -DUSE_ASSERT_CHECKING -Wall -Wextra -Werror -Wno-unused-parameter
      - run: make install
      - run: make installcheck
      - if: ${{ failure() }}
        run: cat regression.diffs
      # Homebrew Postgres does not enable TAP tests, so need to download
      - run: |
          brew install cpanm
          cpanm --notest IPC::Run
          wget -q https://github.com/postgres/postgres/archive/refs/tags/$TAG.tar.gz
          tar xf $TAG.tar.gz
          mv postgres-$TAG postgres
        env:
          TAG: ${{ matrix.postgres == 17 && 'REL_17_2' || 'REL_14_15' }}
      - run: make prove_installcheck PROVE_FLAGS="-I ./postgres/src/test/perl -I ./test/perl"
        env:
          PERL5LIB: /Users/runner/perl5/lib/perl5
      - run: make clean && $(brew --prefix llvm@$LLVM_VERSION)/bin/scan-build --status-bugs make
        env:
          LLVM_VERSION: ${{ matrix.os == 'macos-15' && 18 || 15 }}
          PG_CFLAGS: -DUSE_ASSERT_CHECKING
  windows:
    runs-on: windows-latest
    if: ${{ !startsWith(github.ref_name, 'mac') }}
    steps:
      - uses: actions/checkout@v4
      - uses: ankane/setup-postgres@v1
        with:
          postgres-version: 14
      - run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && ^
          nmake /NOLOGO /F Makefile.win && ^
          nmake /NOLOGO /F Makefile.win install && ^
          nmake /NOLOGO /F Makefile.win installcheck && ^
          nmake /NOLOGO /F Makefile.win clean && ^
          nmake /NOLOGO /F Makefile.win uninstall
        shell: cmd
      - if: ${{ failure() }}
        run: cat regression.diffs
  i386:
    if: ${{ !startsWith(github.ref_name, 'mac') && !startsWith(github.ref_name, 'windows') }}
    runs-on: ubuntu-latest
    container:
      image: debian:12
      options: --platform linux/386
    steps:
      - run: apt-get update && apt-get install -y build-essential git libipc-run-perl postgresql-15 postgresql-server-dev-15 sudo
      - run: service postgresql start
      - run: |
          git clone https://github.com/${{ github.repository }}.git pgvector
          cd pgvector
          git fetch origin ${{ github.ref }}
          git reset --hard FETCH_HEAD
          make
          make install
          chown -R postgres .
          sudo -u postgres make installcheck
          sudo -u postgres make prove_installcheck
        env:
          PG_CFLAGS: -DUSE_ASSERT_CHECKING -Wall -Wextra -Werror -Wno-unused-parameter -Wno-sign-compare
      - if: ${{ failure() }}
        run: cat pgvector/regression.diffs
  valgrind:
    if: ${{ !startsWith(github.ref_name, 'mac') && !startsWith(github.ref_name, 'windows') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ankane/setup-postgres-valgrind@v1
        with:
          postgres-version: 17
          check-ub: yes
      - run: make OPTFLAGS=""
      - run: sudo --preserve-env=PG_CONFIG make install
      - run: make installcheck
